@use 'sass:math';

@function rem($pixel) {
  @if math.is-unitless($pixel) {
    //Просто передаем число и функция делить его на 16 переводя в rem
    @return math.div($pixel, 16) + rem;
  } @else {
    @error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.'
  }
};

// Функция в выбранном месте будет возвращать адаптивное значение в зависимости от ширины и настроек шрифта
@function fluid($max: 100, $min: 10) {

  $maxViewportWidth: 1920;
  $minViewportWidth: 360;

  $maxSize: math.div($max, 16);
  $minSize: math.div($min, 16);
  $maxWidth: math.div($maxViewportWidth, 16);
  $minWidth: math.div($minViewportWidth, 16);

  $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
  $yAxisIntersection: -$minWidth * $slope + $minSize;

//   Rem with accesibility; vw with media adaptive;
  @return clamp(
    #{$minSize * 1rem},
    #{$yAxisIntersection * 1rem} + #{$slope * 100vw},
    #{$maxSize * 1rem}
  );
}